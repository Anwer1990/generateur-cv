[{"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\index.js":"1","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\App.js":"2","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\reportWebVitals.js":"3","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\store\\index.js":"4","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\Router.js":"5","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\BuildingCv.js":"6","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\HomePage.js":"7","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Competences.js":"8","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Experiences.js":"9","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Coordonnees.js":"10","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Apercu.js":"11","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Formations.js":"12","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\reducers\\index.js":"13","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\Stepper.js":"14","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\PreviewCv.js":"15","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\actions\\actions-types.js":"16","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\Navbar.js":"17","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Models.js":"18","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\models\\Model1.js":"19","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\models\\Model2.js":"20"},{"size":738,"mtime":1610959603679,"results":"21","hashOfConfig":"22"},{"size":307,"mtime":1611134720671,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1610959603680,"results":"24","hashOfConfig":"22"},{"size":871,"mtime":1611055645882,"results":"25","hashOfConfig":"22"},{"size":1350,"mtime":1611069026329,"results":"26","hashOfConfig":"22"},{"size":268,"mtime":1610959603673,"results":"27","hashOfConfig":"22"},{"size":811,"mtime":1611054348561,"results":"28","hashOfConfig":"22"},{"size":6553,"mtime":1610969300180,"results":"29","hashOfConfig":"22"},{"size":5456,"mtime":1610968530982,"results":"30","hashOfConfig":"22"},{"size":4722,"mtime":1611054110332,"results":"31","hashOfConfig":"22"},{"size":8983,"mtime":1610984702778,"results":"32","hashOfConfig":"22"},{"size":4564,"mtime":1610968542190,"results":"33","hashOfConfig":"22"},{"size":1027,"mtime":1611055697714,"results":"34","hashOfConfig":"22"},{"size":2325,"mtime":1610959603675,"results":"35","hashOfConfig":"22"},{"size":373,"mtime":1610959603674,"results":"36","hashOfConfig":"22"},{"size":280,"mtime":1611055486868,"results":"37","hashOfConfig":"22"},{"size":766,"mtime":1610963158544,"results":"38","hashOfConfig":"22"},{"size":2329,"mtime":1611055811153,"results":"39","hashOfConfig":"22"},{"size":6887,"mtime":1611132252867,"results":"40","hashOfConfig":"22"},{"size":5015,"mtime":1611136515883,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1sio6jg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\index.js",[],["92","93"],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\App.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\reportWebVitals.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\store\\index.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\Router.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\BuildingCv.js",["94"],"import React from 'react';\r\nimport PreviewCv from './PreviewCv';\r\nimport Stepper from './Stepper'\r\n\r\nfunction BuildingCv ()\r\n{\r\n    return(\r\n        <div className=\"container\">\r\n           <Stepper />             \r\n        </div>\r\n    );\r\n}\r\nexport default BuildingCv;","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\HomePage.js",["95"],"import React,{Component} from 'react';\r\nimport { render } from 'react-dom';\r\nimport {Link}  from \"react-router-dom\";\r\n\r\n\r\nclass HomePage extends Component\r\n{\r\n    state ={\r\n        activeStep:1 \r\n    }\r\n    componentDidMount = () => {\r\n        localStorage.setItem(\"state\",JSON.stringify(this.state));\r\n    }\r\n    render(){\r\n    return(\r\n        <div className=\"container-full\">        \r\n            \r\n            <div className=\"jumbotron\">\r\n                <div className=\"jumbotron-content\">\r\n                    <h2>Construirez votre curriculum vitae en quelque minutes</h2>\r\n                    <Link to=\"/models\" className=\"btn btn-success btn-lg\">Cr√©er un CV</Link>    \r\n                </div>                \r\n            </div>            \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Competences.js",["96","97","98","99","100","101","102"],"import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Radio, TextField } from '@material-ui/core';\r\nimport Stepper from '../Stepper';\r\nimport { connect } from 'react-redux';\r\n\r\n class Competences extends Component {\r\n     state= {\r\n       competences:[{nom:\"\",selectedValue:\"Debutant(e)\"}],\r\n       activeStep:4      \r\n     }\r\n     handleSelectChange = (i,e) => \r\n     {\r\n      const values = this.state.competences;\r\n      values[i].selectedValue = e.target.value;\r\n      console.log(\"value select\",values);\r\n        this.setState({competences:values})        \r\n     }\r\n     handleChange = (i,e) =>\r\n     {\r\n       console.log(\"index ===\",i)\r\n       console.log(\"event ===\",e)\r\n       console.log(\"state ===\",this.state)\r\n        const values = this.state.competences;\r\n       values[i].nom = e.target.value;\r\n       this.setState({competences:values})\r\n     }\r\n     handleAdd = () => {\r\n      const values = [...this.state.competences];\r\n      console.log(\"values +\",values);\r\n      values.push({nom:\"\",selectedValue:\"Debutant(e)\"});\r\n      this.setState({competences:values});\r\n    }\r\n  \r\n   handleRemove = (i) => {\r\n      const values = [...this.state.competences];\r\n      values.splice(i, 1);\r\n      this.setState({competences:values});\r\n      console.log(\"values -\",values);\r\n    }\r\n    handleNext = () => \r\n    {\r\n      if(this.state.activeStep!=5){\r\n        this.setState({activeStep:this.state.activeStep ++})\r\n        console.log(\"activeStep\",this.state.activeStep)\r\n        this.props.getActiveStep(this.state.activeStep);\r\n        this.props.addCompetences(this.state.competences);\r\n      }\r\n      this.props.history.push(\"/apercu\");\r\n    }\r\n    handleBack = () =>\r\n    {\r\n      if(this.state.activeStep!=1){\r\n        this.setState({activeStep:this.state.activeStep --})\r\n        console.log(\"activeStep\",this.state.activeStep)\r\n        this.props.getActiveStep(this.state.activeStep);\r\n        \r\n      }\r\n      this.props.history.push(\"/competences\");\r\n    }\r\n    render() {\r\n      console.log(\"competences\",this.state.competences[0])\r\n        return (\r\n            <div className=\"container\">\r\n                <Stepper />\r\n              <div className=\"main-content row\">\r\n               <div className=\" col-9\">\r\n                {this.state.competences.map((row, index)=>{return(            \r\n                    <div className=\"row\" key={`${row}-${index}`}>\r\n                      <div className=\"from-group col-4\">\r\n                          <TextField  name=\"competence\"  onChange={e => this.handleChange(index,e)}  className=\"col-12\" value={row.nom}  label=\"Comp√©tence\" variant=\"outlined\" />\r\n                      </div>\r\n                      <div className=\" col-lg-4 form-group row\">\r\n                        <Radio\r\n                              checked={row.selectedValue === 'Debutant(e)'}\r\n                              onChange={e => this.handleSelectChange(index,e)}\r\n                              value=\"Debutant(e)\"\r\n                              name=\"radio-button-demo\"\r\n                              inputProps={{ 'aria-label': 'Debutant(e)' }}\r\n                            />\r\n                        <Radio\r\n                          checked={row.selectedValue === 'Interm√©diaire'}\r\n                          onChange={e => this.handleSelectChange(index,e)}\r\n                          value=\"Interm√©diaire\"\r\n                          name=\"radio-button-demo\"\r\n                          inputProps={{ 'aria-label': 'Interm√©diaire' }}\r\n                        />\r\n                        <Radio\r\n                          checked={row.selectedValue === 'Bien'}\r\n                          onChange={e => this.handleSelectChange(index,e)}\r\n                          value=\"Bien\"\r\n                          name=\"radio-button-demo\"\r\n                          inputProps={{ 'aria-label': 'Bien' }}\r\n                        />\r\n                        <Radio\r\n                          checked={row.selectedValue === 'Tr√©s bien'}\r\n                          onChange={e => this.handleSelectChange(index,e)}\r\n                          value=\"Tr√©s bien\"\r\n                          color=\"default\"\r\n                          name=\"radio-button-demo\"\r\n                          inputProps={{ 'aria-label': 'Tr√©s bien' }}\r\n                        />\r\n                        <Radio\r\n                          checked={row.selectedValue === 'Excellent'}\r\n                          onChange={e => this.handleSelectChange(index,e)}\r\n                          value=\"Excellent\"\r\n                          color=\"default\"\r\n                          name=\"radio-button-demo\"\r\n                          inputProps={{ 'aria-label': 'Excellent' }}\r\n                          size=\"small\"\r\n                        />\r\n                      </div>                    \r\n                        <div className=\"col-lg-4\">{row.selectedValue}</div>\r\n                    </div>\r\n                    )})}\r\n                    <div className=\"add-btn-container\">\r\n                      <button type=\"button\" className=\"btn btn-success\" onClick={() => this.handleAdd()}>+</button>\r\n                    </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"row\">\r\n                      <div className=\"form-group col-6\" >\r\n                          <button type=\"button\" onClick={this.handleBack} className=\"btn btn-primary\"> Retour </button>              \r\n                      </div>\r\n                      <div className=\"form-group col-6\" >\r\n                          <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleNext}> Suivant</button>            \r\n                      </div>\r\n                  </div>\r\n                </div>\r\n                </div>                \r\n                <div className=\"col-3\">\r\n                  <img className=\"img-fluid\" src=\"images/etape4.png\" />\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return (\r\n        {\r\n          getActiveStep : (activeStep) =>\r\n            {\r\n                dispatch(\r\n                {type : \"ACTIVE_STEP\" ,activeStep : activeStep},\r\n                )\r\n            },\r\n          addCompetences : (competences) =>\r\n          {\r\n            dispatch (\r\n              {type:\"ADD_COMPETENCES\",competences:competences}\r\n            )\r\n          }              \r\n        }\r\n    )\r\n}\r\nexport default connect(\"\",mapDispatchToProps)(Competences)\r\n","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Experiences.js",["103","104","105","106","107"],"import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Stepper from '../Stepper';\r\nimport { connect } from 'react-redux';\r\n\r\n class Experiences extends Component {\r\n     state ={\r\n         experiences : [{poste:\"\",employeur:\"\",date_debut:\"\",date_fin:\"\"}],\r\n        activeStep:3\r\n     }\r\n     handleNext = () => \r\n     {\r\n       if(this.state.activeStep!=5){\r\n         this.setState({activeStep:this.state.activeStep ++})\r\n         console.log(\"activeStep\",this.state.activeStep)\r\n         this.props.getActiveStep(this.state.activeStep);\r\n         this.props.addExperiences(this.state.experiences)\r\n       }\r\n       this.props.history.push(\"/competences\");\r\n     }\r\n     handleBack = () =>\r\n     {\r\n       if(this.state.activeStep!=1){\r\n         this.setState({activeStep:this.state.activeStep --})\r\n         console.log(\"activeStep\",this.state.activeStep)\r\n         this.props.getActiveStep(this.state.activeStep);\r\n         this.props.addExperiences(this.state.experiences);\r\n       }\r\n       this.props.history.push(\"/formations\");\r\n     }\r\n     handleChange = (i, event) => {\r\n        const values = [...this.state.experiences];\r\n        values[i].[event.target.name] = event.target.value;\r\n        console.log(values)\r\n        this.setState({experiences:values});\r\n      }\r\n     handleAdd = () => {\r\n        const values = [...this.state.experiences];\r\n        console.log(\"values +\",values);\r\n        values.push({poste:\"\",employeur:\"\",date_debut:\"\",date_fin:\"\"});\r\n        this.setState({experiences:values});\r\n      }\r\n    \r\n     handleRemove = (i) => {\r\n        const values = [...this.state.experiences];\r\n        values.splice(i, 1);\r\n        this.setState({experiences:values});\r\n        console.log(\"values -\",values);\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Stepper />\r\n                <div className=\"main-content row\">\r\n                  <div className=\"col-9\">\r\n                    <form >\r\n                        <div className=\"mid-container\">            \r\n                        {this.state.experiences.map((row, index)=>{return(            \r\n                            <div className=\"row\" key={`${row}-${index}`}>\r\n                                \r\n                            <div className=\"form-group col-lg-12\">\r\n                                <TextField type=\"text\" name=\"poste\" onChange={e => this.handleChange(index,e)} className=\"form-control \" label=\"Intitul√© de poste *\" variant=\"outlined\" />    \r\n                            </div>\r\n                            <div className=\"form-group col-lg-12\">\r\n                                <TextField type=\"text\" name=\"employeur\" onChange={e => this.handleChange(index,e)}  className=\"form-control \" label=\"Employeur\" variant=\"outlined\" />    \r\n                            </div>\r\n                            <div className=\"col-lg-10 row\">\r\n                                <div className=\"form-group col-lg-6\">\r\n                                    <TextField type=\"date\" name=\"date_debut\" className=\"form-control \" onChange={e => this.handleChange(index,e)} />\r\n                                </div>\r\n                                <div className=\"form-group col-lg-6\">\r\n                                <TextField type=\"date\" name=\"date_fin\" format=\"dd/MM/yyyy\" className=\"form-control \" onChange={e => this.handleChange(index,e)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group col-lg-2\">\r\n                                <button type=\"button\" onClick={() => this.handleRemove(index)}  className=\"btn btn-danger\">-</button>\r\n                            </div>            \r\n                            </div>\r\n                        )})} \r\n                            \r\n                        <button type=\"button\" className=\"btn btn-success\" onClick={() => this.handleAdd()}>+</button>\r\n\r\n                        </div>\r\n                        <div className=\" col-3\">\r\n                          <div className=\"row\">\r\n                            <div className=\"form-group col-6\" >\r\n                                <button type=\"button\" onClick={this.handleBack} className=\"btn btn-primary\"> Retour </button>              \r\n                            </div>\r\n                            <div className=\"form-group col-6\" >\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleNext}> Suivant</button>            \r\n                            </div>                            \r\n                          </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                  </div>\r\n                  <div className=\"col-3\">\r\n                    <img className=\"img-fluid\" src=\"images/etape3.png\" />\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return (\r\n        {\r\n          getActiveStep : (activeStep) =>\r\n            {\r\n                dispatch(\r\n                {type : \"ACTIVE_STEP\" ,activeStep : activeStep},\r\n                )\r\n            },\r\n          addExperiences : (experiences) =>\r\n          {\r\n            dispatch(\r\n              {type:\"ADD_EXPERIENCES\",experiences: experiences}\r\n            )\r\n          }\r\n        }\r\n    )\r\n}\r\nexport default connect(\"\",mapDispatchToProps)(Experiences)\r\n","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Coordonnees.js",["108","109","110"],"import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport Stepper from '../Stepper';\r\n\r\n\r\n\r\nclass  Coordonnees extends Component\r\n{\r\n  state = {\r\n    coordonnees:{profil:\"\",nom_prenom:\"\",poste:\"\",date_naissance:\"\",telephone:\"\",adresse:\"\",email:\"\",linkedin:\"\"},\r\n    activeStep:1\r\n  }\r\n  componentDidMount()\r\n  {\r\n    this.props.getActiveStep(this.state.activeStep);\r\n    this.props.addCoordonnees(this.state.coordonnees);\r\n  }\r\n\r\nhandleNext = () => \r\n{\r\n  if(this.state.activeStep!=4){\r\n    this.setState({activeStep:this.state.activeStep ++})\r\n    console.log(\"activeStep\",this.state.activeStep)\r\n    this.props.getActiveStep(this.state.activeStep);\r\n    this.props.addCoordonnees(this.state.coordonnees);\r\n  }\r\n  this.props.history.push(\"/formations\");\r\n}\r\n\r\nhandleChange = (e) => {\r\n  let values = {...this.state.coordonnees}\r\n  values.[e.target.name] = e.target.value   \r\n   this.setState({coordonnees:values});\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"container\">\r\n          <Stepper />          \r\n          <div className=\"main-content row\">              \r\n              <div className=\"col-9\">\r\n                <form className=\"col-lg-12 row\"  >\r\n                  <div className=\"form-group col-6 \">\r\n                    <input className=\"form-control\" type=\"file\" />\r\n                  </div>\r\n                  <div className=\"form-group col-12\">\r\n                    <textarea name=\"profil\" onChange={this.handleChange}  id=\"profil\" className=\"form-control\" placeholder=\"Votre pr√©sentation\" ></textarea>\r\n                  </div>\r\n                  <div className=\"form-group col-6 \">                \r\n                    <TextField  name=\"nom_prenom\" onChange={this.handleChange} className=\"col-12\" value={this.state.coordonnees.nom_prenom}  label=\"Nom et Pr√©nom\" variant=\"outlined\" />                              \r\n                  </div>\r\n                  <div className=\"form-group col-6 \">\r\n                    <label>Date de naissance</label>\r\n                  <TextField type=\"date\"  name=\"date_naissance\" onChange={this.handleChange} className=\"col-12\" value={this.state.coordonnees.date_naissance}  />\r\n                  </div>\r\n                  <div className=\"form-group col-6 \">\r\n                    <TextField  name=\"poste\" onChange={this.handleChange} className=\"col-12\" value={this.state.coordonnees.poste} label=\"Poste occup√©\" variant=\"outlined\" /> \r\n                  </div>\r\n                  <h5 className=\"col-lg-12\">Contact :</h5>\r\n                  <div className=\"form-group col-6 \">\r\n                      <TextField  name=\"telephone\" onChange={this.handleChange} value={this.state.coordonnees.telephone} className=\"col-12\" label=\"Telephone\" variant=\"outlined\" />\r\n                  </div>\r\n                  <div className=\"form-group col-6 \">\r\n                      <TextField  name=\"adresse\" onChange={this.handleChange} value={this.state.coordonnees.adresse} className=\"col-12\" label=\"Adresse\" variant=\"outlined\" />\r\n                  </div>\r\n                  <div className=\"form-group col-6 \">\r\n                      <TextField  name=\"email\" onChange={this.handleChange} value={this.state.coordonnees.email} className=\"col-12\" label=\"Email\" variant=\"outlined\" />\r\n                  </div>\r\n                  <div className=\"form-group col-6 \">\r\n                      <TextField  name=\"linkedin\" onChange={this.handleChange} value={this.state.coordonnees.linkedin} className=\"col-12\" label=\"LinkedIn\" variant=\"outlined\" />\r\n                  </div>\r\n                  <div className=\"row col-12\">              \r\n                    <div className=\"form-group col-2\" >\r\n                      <button type=\"button\" className=\"btn btn-success\" onClick={this.handleNext}> Suivant</button>            \r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                  <img className=\"img-fluid\" src=\"images/etape1.png\" />\r\n              </div>\r\n          </div>\r\n\r\n         \r\n      </div>\r\n    )\r\n  }\r\n \r\n    \r\n}\r\nfunction mapStateToProps(state)\r\n{\r\n    return{coordonnees : state.coordonnees}\r\n}\r\nconst mapDispatchToProps    =   dispatch =>\r\n{\r\n    return {\r\n      addCoordonnees :(coordonnees)   => {\r\n            dispatch({type: \"ADD_COORDONNEES\", coordonnees:coordonnees})\r\n        },\r\n      getActiveStep: (activeStep) => {\r\n        dispatch({type:\"ACTIVE_STEP\",activeStep:activeStep})\r\n      }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Coordonnees);","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Apercu.js",["111","112","113","114","115"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '../Stepper';\r\n\r\n\r\nclass Apercu extends Component {\r\n    state = {\r\n        coordonnees:[],\r\n        formations :[],\r\n        experiences:[],\r\n        activeStep:5\r\n    }\r\n    componentWillReceiveProps(nextProps)\r\n    {\r\n        console.log(\"nextProps\",this.props)\r\n        // this.setState({\r\n        //     coordonnees: nextProps.coordonnees,\r\n        //     formations : nextProps.formations,\r\n        //     experiences : nextProps.experiences            \r\n        // })\r\n    }\r\n    handleDownload = () =>\r\n    {\r\n        const printableElements = document.getElementById('doc_pdf').innerHTML;\r\n        \r\n        document.body.innerHTML = printableElements;\r\n        window.print();\r\n    }\r\n  \r\n    render() {\r\n        console.log(\"competences\",this.props.competences);\r\n        const { nom_prenom,poste,date_naissance,adresse,email,linkedin,telephone,profil } = this.props.coordonnees\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <Stepper />\r\n                \r\n                    <Paper id=\"doc_pdf\" className=\"paper row\" elevation={5}>\r\n                    <div className=\"col-lg-4 left-container \">\r\n                        <img src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-380-456332.png\" width=\"150\" alt=\"avatar\" />\r\n                        \r\n                        <h3>{nom_prenom}</h3>\r\n                        <h6>{poste}</h6>\r\n                        <ul className=\"liste_coordonnees\">\r\n                            <li><i class=\"fas fa-birthday-cake\"></i> {date_naissance}</li>\r\n                            <li><i class=\"fas fa-map-marker-alt\"></i> {adresse}</li>\r\n                            <li><i class=\"fas fa-phone\"></i> {telephone}</li>\r\n                            <li><i class=\"fas fa-envelope\"></i> {email}</li>\r\n                            <li><i class=\"fab fa-linkedin\"></i> {linkedin}</li>\r\n                        </ul>\r\n                        <h4 className=\"text-left\">Comp√©tences</h4>\r\n                        <ul>\r\n                        {this.props.competences.map((row,index)=>(\r\n                            <li key={index} className=\"row\"><span className=\"col-lg-6\">{row.nom}</span> <span className=\"col-lg-6\">\r\n                                {(() => {\r\n                                     switch (row.selectedValue) {\r\n                                        case 'Debutant(e)':\r\n                                            return (\r\n                                                <div>\r\n                                                    <i className=\"fas fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                </div>\r\n                                            );\r\n                                            break;\r\n                                        case 'Interm√©diaire':\r\n                                            return (\r\n                                                <div>\r\n                                                    <i className=\"fas fa-star\"></i>\r\n                                                    <i className=\"fas fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                </div>\r\n                                            );\r\n                                            break;\r\n                                        case 'Bien':\r\n                                            return (\r\n                                                <div>\r\n                                                    <i className=\"fas fa-star\"></i>\r\n                                                    <i className=\"fas fa-star\"></i>\r\n                                                    <i className=\"fas fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                    <i className=\"far fa-star\"></i>\r\n                                                </div>\r\n                                            );\r\n                                            break;\r\n                                        case 'Tr√©s bien':\r\n                                        return (\r\n                                            <div>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"far fa-star\"></i>\r\n                                            </div>\r\n                                        );\r\n                                        break;\r\n                                        case 'Excellent':\r\n                                        return (\r\n                                            <div>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                            </div>\r\n                                        );\r\n                                        break;\r\n                                        default:\r\n                                            break;\r\n                                    }\r\n                                })()}\r\n                                </span></li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-lg-8\">\r\n                       <Paper className=\"paper\" elevation={1}> \r\n                        <h4>PROFIL</h4>\r\n                        <p>{profil}</p>\r\n                        </Paper>\r\n                        <Paper className=\"paper\" elevation={1}>                           \r\n                            <h4>FORMATIONS</h4>\r\n                            {this.props.formations.map((row, index)=>(\r\n                            <div className=\"row\" key={index}>\r\n                                <div className=\"col-lg-2\">{row.annee_promotion}</div>\r\n                                <div className=\"col-lg-8\">\r\n                                    <div className=\"col-lg-8\">\r\n                                        <strong>{row.titre}</strong>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12\">\r\n                                        <span>{row.etablissement}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            ))}\r\n                        </Paper>\r\n                        <Paper className=\"paper\" elevation={1} >\r\n                            <h4>EXPERIENCES</h4>\r\n                            {this.props.experiences.map((row,index)=>(\r\n                               <div className=\"row\" key={index}>\r\n                                <div className=\"col-lg-4\">{row.date_debut} - {row.date_fin}</div>\r\n                                <div className=\"col-lg-8\">\r\n                                    <div className=\"col-lg-12\" >\r\n                                        <strong>{row.employeur}</strong>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12\" >\r\n                                        <span>{row.poste}</span>\r\n                                    </div>\r\n                                </div>\r\n                               </div> \r\n                            ))}\r\n                        </Paper>\r\n                    </div>\r\n                    </Paper>\r\n                    <button className=\"btn btn-success mt-10\" onClick={this.handleDownload}>Generer un PDF</button>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state)\r\n{\r\n    return{coordonnees : state.coordonnees,formations:state.formations,experiences:state.experiences,competences:state.competences}\r\n}\r\nexport default connect(mapStateToProps,null)(Apercu)\r\n","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Formations.js",["116","117","118","119","120","121","122","123"],"import React, { Component }  from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux';\r\nimport Stepper from '../Stepper';\r\n\r\nclass Formations extends Component\r\n{\r\n state = {\r\n    formations:[{ annee_promotion:'',etablissement:'',titre:''}],\r\n    activeStep:2\r\n  }\r\n  handleNext = () => \r\n{\r\n  if(this.state.activeStep!=4){\r\n    this.setState({activeStep:this.state.activeStep ++})\r\n    console.log(\"activeStep\",this.state.activeStep)\r\n    this.props.getActiveStep(this.state.activeStep);\r\n    this.props.addFormations(this.state.formations)\r\n  }\r\n  this.props.history.push(\"/experiences\");\r\n}\r\nhandleBack = () =>\r\n{\r\n  if(this.state.activeStep!=1){\r\n    this.setState({activeStep:this.state.activeStep --})\r\n    console.log(\"activeStep\",this.state.activeStep)\r\n    this.props.getActiveStep(this.state.activeStep);\r\n  }\r\n  this.props.history.push(\"/coordonnees\");\r\n}\r\n   handleChange = (i, event) => {\r\n    const values = [...this.state.formations];\r\n    values[i].[event.target.name] = event.target.value;\r\n    console.log(values)\r\n    this.setState({formations:values});\r\n  }\r\n  \r\nhandleAdd = (event) => {\r\n    const values = [...this.state.formations];\r\n    console.log(\"values +\",values);\r\n    values.push({annee_promotion:'',etablissement:'',titre:'' });\r\n    this.setState({formations:values});\r\n  }\r\n\r\n handleRemove = (i) => {\r\n    const values = [...this.state.formations];\r\n    values.splice(i, 1);\r\n    this.setState({formations:values});\r\n    console.log(\"values -\",values);\r\n  }\r\n  render() {\r\n    console.log(\"formations\",this.state.formations)\r\n    return(\r\n        <div className=\"container \">\r\n          <Stepper />\r\n          <div className=\"main-content row\">\r\n            <div className=\"col-9\">\r\n              <form >\r\n                <div className=\"mid-container\">            \r\n                {this.state.formations.map((row, index)=>{return(            \r\n                  <div className=\"row\" key={`${row}-${index}`}>\r\n                    <div className=\"form-group col-3\">              \r\n                      <TextField type=\"date\" name=\"experiences\" onChange={e => this.handleChange(index,e)} name=\"annee_promotion\"  className=\"form-control \" label=\"\" />              \r\n                    </div>\r\n                    <div className=\"form-group col-4\">\r\n                      <TextField type=\"text\" name=\"experiences\" onChange={e => this.handleChange(index,e)} name=\"etablissement\" className=\"form-control \" label=\"Etablissement\" variant=\"outlined\" />    \r\n                    </div>\r\n                    <div className=\"form-group col-4\">\r\n                      <TextField type=\"text\" name=\"experiences\" onChange={e => this.handleChange(index,e)} name=\"titre\" className=\"form-control \" label=\"Dipl√¥me\" variant=\"outlined\" />    \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <button type=\"button\" onClick={() => this.handleRemove(index)}  className=\"btn btn-danger\">-</button>\r\n                    </div>            \r\n                  </div>\r\n                )})} \r\n                  \r\n                <button type=\"button\" className=\"btn btn-success\" onClick={() => this.handleAdd()}>+</button>\r\n\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group col-6\" >\r\n                      <button type=\"button\" onClick={this.handleBack} className=\"btn btn-primary\"> Retour </button>              \r\n                    </div>\r\n                    <div className=\"form-group col-6\" >\r\n                      <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleNext}> Suivant</button>            \r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                    <img className=\"img-fluid\" src=\"images/etape2.png\" />\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n           }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return (\r\n        {\r\n          getActiveStep : (activeStep) =>\r\n            {\r\n                dispatch(\r\n                {type : \"ACTIVE_STEP\" ,activeStep : activeStep},\r\n                )\r\n            },\r\n          addFormations : (formations) =>\r\n          {\r\n            dispatch(\r\n              {type:\"ADD_FORMATIONS\",formations: formations}\r\n            )\r\n          }\r\n        }\r\n    )\r\n}\r\nexport default connect(\"\",mapDispatchToProps)(Formations);\r\n\r\n\r\n","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\reducers\\index.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\Stepper.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\PreviewCv.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\actions\\actions-types.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\Navbar.js",["124","125","126"],"import React,{Component} from 'react';\r\n\r\nclass Navbar extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <nav className=\"navbar\">\r\n                <div className=\"container\">\r\n                    <span className=\"navbar-brand mb-0 h1\">\r\n                        <img src=\"logo.png\" alt='logo' />\r\n                    </span>\r\n                    <ul className=\"social-links float-right\">\r\n                        <li><a href=\"\"><i class=\"fab fa-facebook\"></i></a></li>\r\n                        <li><a href=\"\"><i class=\"fab fa-linkedin\"></i></a></li>\r\n                        <li><a href=\"\"><i class=\"fab fa-github\"></i></a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\nexport default Navbar;","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\steps\\Models.js",["127","128"],"import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Link}  from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nexport class Models extends Component {\r\n    state= {\r\n        model:\"\"\r\n    }\r\n    handleChoice = (e) =>\r\n    {\r\n        \r\n        this.props.ChoiceCvModel(e.target.name)\r\n        this.props.history.push(\"/coordonnees\");\r\n    }\r\n    render() {\r\n        console.log(\"modelchoice\",this.state.model)\r\n        return (\r\n            <Paper  className=\"paper container\" variant=\"outlined\" square >\r\n                <h2>Nos mod√®les</h2>\r\n                <h5>Choisissez votre mod√®le pr√©f√©r√©</h5>\r\n                <div className=\"container\">\r\n                    <p></p>\r\n                    <div className=\"row \">\r\n                            <div className=\"modelBox\">\r\n                                <img className=\"img-fluid\" src=\"images/model01.jpg\" />\r\n                                <Link onClick={this.handleChoice} name=\"model1\" className=\"btnModelStart\">Model num√©ro 1</Link>\r\n                            </div>\r\n                            <div className=\"modelBox\">\r\n                                <img className=\"img-fluid\" src=\"images/model02.jpg\" />\r\n                                <Link onClick={this.handleChoice} name=\"model2\" className=\"btnModelStart\">Model num√©ro 2</Link>\r\n                            </div>\r\n                        {/* <div className=\"modelBox\">\r\n                            \r\n                                <img className=\"img-fluid\" src=\"images/model03.jpg\" />\r\n                            <button className=\"btnModelStart\">Model num√©ro 3</button>\r\n                        </div>\r\n                        <div className=\"modelBox\">\r\n                            \r\n                                <img className=\"img-fluid\" src=\"images/model04.jpg\" />\r\n                            <button className=\"btnModelStart\">Model num√©ro 4</button>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return {\r\n        ChoiceCvModel :(model) =>\r\n        {\r\n            dispatch({type:\"CHOICEMODEL\",model:model})\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Models)\r\n","C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\models\\Model1.js",[],"C:\\Users\\anwer\\Desktop\\projects-test\\generateur-cv\\src\\components\\models\\Model2.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"137","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"138","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":13},{"ruleId":"133","severity":1,"message":"139","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":44,"column":31,"nodeType":"142","messageId":"143","endLine":44,"endColumn":33},{"ruleId":"144","severity":1,"message":"145","line":45,"column":35,"nodeType":"146","endLine":45,"endColumn":45},{"ruleId":"140","severity":1,"message":"141","line":54,"column":31,"nodeType":"142","messageId":"143","endLine":54,"endColumn":33},{"ruleId":"144","severity":1,"message":"145","line":55,"column":35,"nodeType":"146","endLine":55,"endColumn":45},{"ruleId":"147","severity":1,"message":"148","line":132,"column":19,"nodeType":"149","endLine":132,"endColumn":72},{"ruleId":"140","severity":1,"message":"141","line":13,"column":32,"nodeType":"142","messageId":"143","endLine":13,"endColumn":34},{"ruleId":"144","severity":1,"message":"145","line":14,"column":36,"nodeType":"146","endLine":14,"endColumn":46},{"ruleId":"140","severity":1,"message":"141","line":23,"column":32,"nodeType":"142","messageId":"143","endLine":23,"endColumn":34},{"ruleId":"144","severity":1,"message":"145","line":24,"column":36,"nodeType":"146","endLine":24,"endColumn":46},{"ruleId":"147","severity":1,"message":"148","line":98,"column":21,"nodeType":"149","endLine":98,"endColumn":74},{"ruleId":"140","severity":1,"message":"141","line":24,"column":27,"nodeType":"142","messageId":"143","endLine":24,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":25,"column":31,"nodeType":"146","endLine":25,"endColumn":41},{"ruleId":"147","severity":1,"message":"148","line":84,"column":19,"nodeType":"149","endLine":84,"endColumn":72},{"ruleId":"150","severity":1,"message":"151","line":68,"column":45,"nodeType":"152","messageId":"153","endLine":68,"endColumn":51},{"ruleId":"150","severity":1,"message":"151","line":79,"column":45,"nodeType":"152","messageId":"153","endLine":79,"endColumn":51},{"ruleId":"150","severity":1,"message":"151","line":90,"column":45,"nodeType":"152","messageId":"153","endLine":90,"endColumn":51},{"ruleId":"150","severity":1,"message":"151","line":101,"column":41,"nodeType":"152","messageId":"153","endLine":101,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":112,"column":41,"nodeType":"152","messageId":"153","endLine":112,"endColumn":47},{"ruleId":"140","severity":1,"message":"141","line":14,"column":27,"nodeType":"142","messageId":"143","endLine":14,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":15,"column":31,"nodeType":"146","endLine":15,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":24,"column":27,"nodeType":"142","messageId":"143","endLine":24,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":25,"column":31,"nodeType":"146","endLine":25,"endColumn":41},{"ruleId":"154","severity":1,"message":"155","line":63,"column":108,"nodeType":"156","endLine":63,"endColumn":130},{"ruleId":"154","severity":1,"message":"155","line":66,"column":108,"nodeType":"156","endLine":66,"endColumn":128},{"ruleId":"154","severity":1,"message":"155","line":69,"column":108,"nodeType":"156","endLine":69,"endColumn":120},{"ruleId":"147","severity":1,"message":"148","line":93,"column":21,"nodeType":"149","endLine":93,"endColumn":74},{"ruleId":"157","severity":1,"message":"158","line":14,"column":29,"nodeType":"149","endLine":14,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":15,"column":29,"nodeType":"149","endLine":15,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":16,"column":29,"nodeType":"149","endLine":16,"endColumn":40},{"ruleId":"147","severity":1,"message":"148","line":26,"column":33,"nodeType":"149","endLine":26,"endColumn":87},{"ruleId":"147","severity":1,"message":"148","line":30,"column":33,"nodeType":"149","endLine":30,"endColumn":87},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'PreviewCv' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]